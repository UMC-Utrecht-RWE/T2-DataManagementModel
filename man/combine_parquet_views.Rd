% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_db_functions.R
\name{combine_parquet_views}
\alias{combine_parquet_views}
\title{Combine Parquet-Based Views into Final CDM Views or Tables}
\usage{
combine_parquet_views(
  db_connection,
  data_model,
  schema_conception,
  schema_combined_views,
  files_in_input,
  create_db_as
)
}
\arguments{
\item{db_connection}{A DuckDB database connection object (`DBIConnection`).}

\item{data_model}{Character.
The name of the data model (e.g., `"conception"`).}

\item{schema_conception}{Character.
Schema where the CDM tables are defined.}

\item{schema_combined_views}{Character.
Schema where the combined views or tables will be created.}

\item{files_in_input}{Named character vector.
Sanitized view names as values, with CDM table names as names.}

\item{create_db_as}{Character.
Whether to create `"views"` or `"tables"` in the combined schema.}
}
\value{
No return value.
 The function creates combined views or tables in the specified schema.
}
\description{
This function creates combined views or tables in DuckDB by unifying
 intermediate Parquet-based views for each CDM table. It ensures column
 alignment with the CDM schema and handles missing columns gracefully.
}
\examples{
\dontrun{
combine_parquet_views(
  db_connection = con,
  data_model = "conception",
  schema_conception = "cdm_conception",
  schema_combined_views = "combined_views",
  files_in_input = c(person1 = "person", person2 = "person"),
  create_db_as = "views"
)
}

}
\keyword{internal}
