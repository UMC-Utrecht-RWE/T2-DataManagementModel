% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_origin_row.R
\name{get_origin_row}
\alias{get_origin_row}
\title{Get Records from Origin CDM Tables by Unique Identifier}
\usage{
get_origin_row(
  db_connection,
  unique_id_dt,
  unique_id_name = "ID",
  separator_id = "-"
)
}
\arguments{
\item{db_connection}{Database connection object (DBIConnection).}

\item{unique_id_dt}{A data.frame or data.table containing unique identifiers.}

\item{unique_id_name}{Column name in unique_id_dt containing the identifiers. Default is "ID".}

\item{separator_id}{Character that separates table name from row ID in the unique identifier. Default is "-".}
}
\value{
A named list where each element contains the records from a CDM table
        matching the provided identifiers. List names correspond to table names.
}
\description{
This function retrieves records from Common Data Model (CDM) tables in a database
that match provided unique identifiers. The function assumes that unique identifiers
are formatted as 'table_name-row_id'.
}
\details{
The function splits each unique identifier into a table name and row ID 
         using the specified separator. It then queries each unique table to retrieve 
         the corresponding records. Tables without matching records return empty lists.
}
\examples{
\dontrun{
library(DBI)
library(data.table)

# Create a database connection
db_connection <- dbConnect(RSQLite::SQLite(), ":memory:")

# Create and populate a sample table
dbExecute(db_connection, "CREATE TABLE EVENTS (ID TEXT, value TEXT)")
dbExecute(db_connection, "INSERT INTO EVENTS VALUES ('EVENTS-1', 'value1')")
dbExecute(db_connection, "INSERT INTO EVENTS VALUES ('EVENTS-2', 'value2')")

# Create unique identifiers
cases <- data.table(ID = c("EVENTS-1", "EVENTS-2"))

# Retrieve records
results <- get_origin_row(
  db_connection = db_connection,
  unique_id_dt = cases,
  separator_id = "-"
)

# Clean up
dbDisconnect(db_connection)
}

}
