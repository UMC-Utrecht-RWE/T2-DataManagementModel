% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/delete_duplicates_origin.R
\name{delete_duplicates_origin}
\alias{delete_duplicates_origin}
\title{Delete Duplicate Rows in CDM Table of origin table}
\usage{
delete_duplicates_origin(
  db_connection,
  scheme,
  save_deleted = FALSE,
  save_path = NULL,
  add_postfix = NA
)
}
\arguments{
\item{db_connection}{Database connection object (SQLiteConnection).}

\item{scheme}{List with CDM table names and character vectors with the
columns/variables to be distinct. Use "*" for defining all columns.
Special case for scheme if all variables/columns of a table are used.}

\item{save_deleted}{Logical, option to save the deleted rows. Good for
tracking. Default is FALSE.}

\item{save_path}{Mandatory when save_deleted is TRUE. Path where the files
with the deleted records will be saved.}

\item{add_postfix}{An additional postfix to the saved file name when saving
deleted records. Default is NA.}
}
\description{
This function is designed for deleting duplicate rows based on the specified
columns.
The function deletes duplicate rows in the specified CDM tables and
optionally saves the deleted records.
}
\examples{
\dontrun{
# Example 1: Deleting duplicate rows in specified columns
db_connection <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
scheme <- list("EVENTS" = c("*"), "PERSONS" = c("person_id", "age"))
delete_duplicates_origin(db_connection, scheme)

# Example 2: Deleting duplicate rows for all columns in specified tables
scheme <- setNames(rep("*", length(CDM_tables_names)), CDM_tables_names)
delete_duplicates_origin(db_connection, scheme, save_deleted = TRUE,
  save_path = "/path/to/save")
}

}
