% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_unique_id.R
\name{create_unique_id}
\alias{create_unique_id}
\title{Create Unique IDs for CDM Tables}
\usage{
create_unique_id(
  db_connection,
  cdm_tables_names,
  extension_name = "",
  id_name = "ori_id",
  separator_id = "-",
  order_by_cols = list()
)
}
\arguments{
\item{db_connection}{Database connection object (SQLiteConnection).}

\item{cdm_tables_names}{List of CDM tables names to be imported to database.}

\item{extension_name}{String to be added to name of the tables, useful when
loading different CDM instances in the same database.}

\item{id_name}{String that defines the name of the unique identifier.
By default is set as "ori_id".}

\item{separator_id}{String that defines the separators between the table name
and the ROWID number.}

\item{order_by_cols}{List of vector with column names which you can apply an
order by. E.g list(EVENTS = c('person_id','event_code'))}
}
\description{
This function generates a unique CDM ID for each data record of the specified
Database CDM instance. This step is suggested to be applied after using the
loadDb function.
The function modifies the specified database by creating unique IDs
for the specified CDM tables.
}
\examples{
\dontrun{
# Example usage of create_unique_id
db_connection <- dbConnect(RSQLite::SQLite(), ":memory:")
cdm_tables_names <- c("PERSONS", "VISITS", "OBSERVATIONS")
create_unique_id(db_connection, cdm_tables_names,
  extension_name = "_CDM1",
  id_name = "CDM_ID", separator_id = "_"
)
}

}
