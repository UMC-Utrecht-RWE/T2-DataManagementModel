% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_unique_id.R
\name{create_unique_id}
\alias{create_unique_id}
\title{Create Unique IDs for CDM Tables}
\usage{
create_unique_id(
  db_connection,
  cdm_tables_names,
  extension_name = "",
  id_name = "Ori_ID",
  separator_id = "-",
  require_rowid = FALSE
)
}
\arguments{
\item{db_connection}{Database connection object (SQLiteConnection).}

\item{cdm_tables_names}{List of CDM tables names to be imported into the database.}

\item{extension_name}{String to be added to the name of the tables, useful when 
loading different CDM instances in the same database.}

\item{id_name}{String that defines the name of the unique identifier. 
By default is set as "Ori_ID".}

\item{separator_id}{String that defines the separators between the table name 
and the ROWID number.}

\item{require_rowid}{Logical, default is FALSE. If TRUE, the unique ID won't 
be generated unless the ROWID column exists in the table.}
}
\value{
The function modifies the specified database by creating unique IDs 
for the specified CDM tables.
}
\description{
This function generates a unique CDM ID for each data record of the specified 
Database CDM instance. This step is suggested to be applied after using the 
loadDb function.
}
\examples{
\dontrun{
# Example usage of create_unique_id
db_connection <- dbConnect(RSQLite::SQLite(), ":memory:")
cdm_tables_names <- c("PERSONS", "VISITS", "OBSERVATIONS")
create_unique_id(db_connection, cdm_tables_names, extension_name = "_CDM1", 
id_name = "CDM_ID", separator_id = "_", require_rowid = FALSE)
}

}
