% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_missing_values.R
\name{clean_missing_values}
\alias{clean_missing_values}
\title{Clean tables by removing rows with missing values}
\usage{
clean_missing_values(
  con,
  list_columns_clean,
  schema_name = NULL,
  to_view = FALSE,
  pipeline_extension = "_T2DMM"
)
}
\arguments{
\item{con}{A DBI connection to a DuckDB database.}

\item{list_columns_clean}{A named list. Each element is a character
vector of column}

\item{to_view}{Logical. If `TRUE` (default), creates a view with
the unique ID column.
If `FALSE`, overwrites the original table.}

\item{pipeline_extension}{When using views when applying the
clean_missing_values on CDM table we must define the name of the
pipeline extension. See add_view for more information.}
}
\value{
Invisibly returns \code{TRUE} after processing all tables.
}
\description{
For each table listed in \code{list_columns_clean}, this function either:
- creates or extends a view pipeline (non-destructive, dynamic), OR
- materializes a cleaned version by overwriting the original table.
}
\details{
Missing values are defined as \code{NULL}, empty string (\code{''}),
or the string \code{'NA'}.
}
\examples{
\dontrun{
list_cols <- list(
  PERSONS = c("person_id"),
  VACCINES = c("person_id")
)

# Create dynamic views
clean_missing_values(con, list_cols, mode = "view")

# Overwrite tables with materialized cleaned version
clean_missing_values(con, list_cols, mode = "materialized")
}
}
