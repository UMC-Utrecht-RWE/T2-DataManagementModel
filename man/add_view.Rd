% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_view.R
\name{add_view}
\alias{add_view}
\title{Add a transformation step to a DuckDB view pipeline}
\usage{
add_view(con, pipeline, transform_sql, base_table = NULL)
}
\arguments{
\item{con}{A DBI connection object to a DuckDB database.}

\item{pipeline}{A string specifying the name of the pipeline.}

\item{transform_sql}{A SQL string representing the transformation. Use `%s` as a placeholder
for the current head view of the pipeline.}

\item{base_table}{Optional. The name of the base table to initialize the pipeline if it
does not exist. Required only for the first step.}
}
\value{
Invisibly returns the name of the newly created versioned view in the pipeline.
}
\description{
This function adds a new transformation step to a versioned view pipeline stored entirely
within DuckDB. Each step creates a new view based on the previous step, and a final alias
view (e.g., `persons_view`) always points to the latest version of the pipeline.
}
\details{
If the pipeline does not exist yet, the function will automatically initialize it from
a specified base table and create the first version.
}
\examples{
# Initialize or add to the pipeline
add_view(con, "persons_pipeline",
         "SELECT DISTINCT * FROM \%s",
         base_table = "persons")

add_view(con, "persons_pipeline",
         "SELECT *, LENGTH(name) AS name_len FROM \%s" )

# Query the final transformed view
DBI::dbGetQuery(con, "SELECT * FROM persons_view LIMIT 5")
}
