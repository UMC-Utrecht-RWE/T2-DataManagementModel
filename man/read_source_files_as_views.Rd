% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_db_functions.R
\name{read_source_files_as_views}
\alias{read_source_files_as_views}
\title{Read Source Files and Create SQL Views in DuckDB}
\usage{
read_source_files_as_views(
  db_connection,
  data_model,
  tables_in_cdm,
  format_source_files,
  folder_path_to_source_files,
  schema_individual_views
)
}
\arguments{
\item{db_connection}{A DuckDB database connection object (`DBIConnection`).}

\item{data_model}{Character.
The name of the data model (e.g., `"conception"`).}

\item{tables_in_cdm}{Character vector.
List of expected table names in the CDM.}

\item{format_source_files}{Character.
Format of the source files. Must be either `"csv"` or `"parquet"`.}

\item{folder_path_to_source_files}{Character.
Path to the folder containing the source files.}

\item{schema_individual_views}{Character.
Name of the schema where individual views will be created.}
}
\value{
A character vector of sanitized file names for which views were
 successfully created.
}
\description{
This function reads source files (CSV or Parquet) from a specified folder
 and creates SQL views in DuckDB for each file that matches the expected
 CDM table names.
}
\examples{
\dontrun{
tables_in_db <- read_source_files_as_views(
  db_connection = con,
  data_model = "conception",
  tables_in_cdm = c("person", "observation", "visit_occurrence"),
  format_source_files = "csv",
  folder_path_to_source_files = "data/source/",
  schema_individual_views = "individual_views"
)
}

}
\keyword{internal}
