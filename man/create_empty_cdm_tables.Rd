% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_db_functions.R
\name{create_empty_cdm_tables}
\alias{create_empty_cdm_tables}
\title{Create Empty CDM Tables in DuckDB}
\usage{
create_empty_cdm_tables(
  db_connection,
  data_model,
  excel_path_to_cdm_schema,
  tables_in_cdm,
  schema_conception
)
}
\arguments{
\item{db_connection}{A DuckDB database connection object (`DBIConnection`).}

\item{data_model}{Character.
The name of the data model (e.g., `"conception"`).}

\item{excel_path_to_cdm_schema}{Character.
Full path to the Excel file containing the CDM schema.}

\item{tables_in_cdm}{Character vector.
List of CDM table names to be created.}

\item{schema_conception}{Character.
Name of the schema where the CDM tables will be created.}
}
\value{
No return value.
 The function executes SQL statements to create empty tables
  in the database. A message is printed upon successful creation.
}
\description{
This function reads table definitions from an Excel-based CDM schema and
 generates SQL DDL statements to create empty tables in a specified schema.
}
\details{
For each table in `tables_in_cdm`, the function:
\itemize{
  \item Reads the corresponding sheet from the Excel schema file.
  \item Extracts column names and formats starting from row 4.
  \item Stops reading at the first occurrence of the word `"Conventions"`.
  \item Generates SQL DDL using a helper function `generate_ddl()`.
  \item Executes the combined DDL to create all tables in the schema.
}
}
\examples{
\dontrun{
create_empty_cdm_tables(
  db_connection = con,
  data_model = "conception",
  excel_path_to_cdm_schema = "schema/cdm_schema.xlsx",
  tables_in_cdm = c("person", "observation", "visit_occurrence"),
  schema_conception = "cdm_conception"
)
}

}
\keyword{internal}
